name: Docker Multiarch Builds

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
#      - 'v*.*.*'
#    tags:
#      - 'v*.*.*'
#  pull_request:
#    branches:
#      - 'master'
#      - 'v*.*.*'

env:
  IMAGE_NAME: uvaflow
  IMAGE_VERSION: v1

permissions: 
  contents: read
  packages: write
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build-arm64:
    runs-on: ubuntu-latest
    steps:
      # Get the repositery's code
      - name: Checkout
        uses: actions/checkout@v2
      
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: docker-meta-arm64
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/uva-trasgo/${{ env.IMAGE_NAME }}
            rociocarratalasaez/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=${{ env.IMAGE_VERSION }}-arm64

          # prefix=amd64-
          # type=sha
          # type=schedule
          # type=ref,event=branch
          # type=semver,pattern={{version}}
          # type=semver,pattern={{major}}.{{minor}}
          # type=semver,pattern={{major}}

      - name: Build and push linux/arm64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.complete-arm64
          platforms: linux/arm64 #,linux/arm/v7,linux/s390x,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker-meta-arm64.outputs.tags }}
          labels: ${{ steps.docker-meta-arm64.outputs.labels }}

  build-bin-arm64:
    runs-on: ubuntu-latest
    steps:
      # Get the repositery's code
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: docker-meta-arm64
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/uva-trasgo/${{ env.IMAGE_NAME }}-bin
            rociocarratalasaez/${{ env.IMAGE_NAME }}-bin
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=${{ env.IMAGE_VERSION }}-arm64

          # prefix=amd64-
          # type=sha
          # type=schedule
          # type=ref,event=branch
          # type=semver,pattern={{version}}
          # type=semver,pattern={{major}}.{{minor}}
          # type=semver,pattern={{major}}

      - name: Build and push linux/arm64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.bin-arm64
          platforms: linux/arm64 #,linux/arm/v7,linux/s390x,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker-meta-arm64.outputs.tags }}
          labels: ${{ steps.docker-meta-arm64.outputs.labels }}          


  build-amd64:
    runs-on: ubuntu-latest
    steps:
      # Get the repositery's code
      - name: Checkout
        uses: actions/checkout@v2
      
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: docker-meta-amd64
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/uva-trasgo/${{ env.IMAGE_NAME }}
            rociocarratalasaez/${{ env.IMAGE_NAME }} 
            
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=${{ env.IMAGE_VERSION }}-amd64
            type=sha
            
          # prefix=amd64-
          # type=sha
          # type=schedule
          # type=ref,event=branch
          # type=semver,pattern={{version}}
          # type=semver,pattern={{major}}.{{minor}}
          # type=semver,pattern={{major}}

      - name: Build and push linux/amd64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.complete-amd64
          platforms: linux/amd64 #,linux/arm/v7,linux/s390x,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker-meta-amd64.outputs.tags }}
          labels: ${{ steps.docker-meta-amd64.outputs.labels }}


  build-bin-amd64:
    runs-on: ubuntu-latest
    steps:
      # Get the repositery's code
      - name: Checkout
        uses: actions/checkout@v2
      
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: docker-meta-amd64
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/uva-trasgo/${{ env.IMAGE_NAME }}-bin
            rociocarratalasaez/${{ env.IMAGE_NAME }}-bin
            
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=${{ env.IMAGE_VERSION }}-amd64
            
          # prefix=amd64-
          # type=sha
          # type=schedule
          # type=ref,event=branch
          # type=semver,pattern={{version}}
          # type=semver,pattern={{major}}.{{minor}}
          # type=semver,pattern={{major}}

      - name: Build and push linux/amd64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.bin-amd64
          platforms: linux/amd64 #,linux/arm/v7,linux/s390x,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker-meta-amd64.outputs.tags }}
          labels: ${{ steps.docker-meta-amd64.outputs.labels }}
